def dashboard(request):
    if not request.user.is_authenticated:
        return redirect('login')

    tasks = Task.objects.filter(user=request.user)

    # Get the current date
    today = now()
    current_year = today.year
    current_month = today.month

    # Get the first day of the current month and its weekday
    first_day_of_month = datetime(current_year, current_month, 1)
    first_weekday = first_day_of_month.weekday()  # Monday = 0, Sunday = 6
    _, last_day = calendar.monthrange(current_year, current_month)

    # Prepare the days in the month, including padding for the first week
    days_in_month = []
    # Padding for the empty days before the first day
    for _ in range(first_weekday):
        days_in_month.append({'day': None, 'tasks': []})

    # Add actual days with tasks
    for day in range(1, last_day + 1):
        date = datetime(current_year, current_month, day)
        day_tasks = tasks.filter(due_date=date)

        # Convert day_tasks queryset to a list of dictionaries
        task_list = []
        for task in day_tasks:
            task_list.append({
                'id': task.id,
                'title': task.title,
                'description': task.description,
                'is_completed': task.is_completed,
            })

        days_in_month.append({
            'day': day,
            'tasks': task_list
        })

    context = {
        'tasks': tasks,
        'days_in_month': days_in_month,
        'current_month': first_day_of_month.strftime('%B'),
        'current_year': current_year,
    }

    return render(request, 'dashboard.html', context)

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    
    {% load static %}
    <link rel="stylesheet" href="{% static 'tasks/css/styles.css' %}">
    <style>
        .calendar {
            display: grid;
            grid-template-columns: repeat(7, 1fr);  /* 7 columns for each day of the week */
            grid-gap: 10px;
            margin-top: 20px;
        }
        .calendar-header {
            text-align: center;
            margin-bottom: 20px;
        }
        .day {
            border: 1px solid #ddd;
            padding: 10px;
            position: relative;
            min-height: 100px;
            background-color: #f9f9f9;
            cursor: pointer;
        }
        .day .date {
            position: absolute;
            top: 5px;
            right: 10px;
            font-weight: bold;
        }
        .event {
            margin-top: 10px;
        }
        .status-pending {
            background-color: yellow;
            padding: 3px 5px;
            border-radius: 3px;
            color: black;
            display: inline-block;
            font-size: 12px;
        }
        .status-completed {
            background-color: blue;
            padding: 3px 5px;
            border-radius: 3px;
            color: white;
            display: inline-block;
            font-size: 12px;
        }
        .add-task-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .add-task-btn:hover {
            background-color: #0056b3;
        }
        #taskFormModal, #taskDetailsModal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            box-shadow: 0px 4px 6px rgba(0,0,0,0.1);
            z-index: 1000;
            width: 300px;
        }
        #taskFormModal .close-btn, #taskDetailsModal .close-btn {
            position: absolute;
            top: 5px;
            right: 10px;
            cursor: pointer;
            font-weight: bold;
        }
        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 500;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Dashboard - {{ current_month }} {{ current_year }}</h2>
        <button class="add-task-btn" onclick="openTaskForm()">Add Task</button>

        <div class="calendar">
            <!-- Calendar Headers for Days of the Week -->
            <div class="calendar-header">Mon</div>
            <div class="calendar-header">Tue</div>
            <div class="calendar-header">Wed</div>
            <div class="calendar-header">Thu</div>
            <div class="calendar-header">Fri</div>
            <div class="calendar-header">Sat</div>
            <div class="calendar-header">Sun</div>

            <!-- Loop through each day in the current month, with padding for previous days -->
            {% for day in days_in_month %}
                <div class="day" onclick="showTaskDetails({{ day.day }}, '{{ day.tasks|json_script:'tasks_'|escapejs }}')">
                    {% if day.day %}
                        <div class="date">{{ day.day }}</div>

                        <!-- Loop through tasks/events for this specific day -->
                        {% for task in day.tasks %}
                            <div class="event">
                                <strong>{{ task.title }}</strong><br>
                                <small>
                                    {% if task.is_completed %}
                                        <span class="status-completed">Completed</span>
                                    {% else %}
                                        <span class="status-pending">Pending</span>
                                    {% endif %}
                                </small>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            {% endfor %}
        </div>

        <!-- Add Task Form Modal -->
        <div id="taskFormModal">
            <span class="close-btn" onclick="closeTaskForm()">X</span>
            <form method="post" action="{% url 'create_task' %}">
                {% csrf_token %}
                <label for="title">Title</label>
                <input type="text" id="title" name="title" required>

                <label for="description">Description</label>
                <textarea id="description" name="description" required></textarea>

                <label for="due_date">Due Date</label>
                <input type="date" id="due_date" name="due_date" required>

                <button type="submit">Create Task</button>
            </form>
        </div>

        <!-- Task Details Modal -->
        <div id="taskDetailsModal">
            <span class="close-btn" onclick="closeTaskDetails()">X</span>
            <div id="taskListContainer"></div>
        </div>

        <div id="overlay"></div>
    </div>

    <script>
        function openTaskForm() {
            document.getElementById('taskFormModal').style.display = 'block';
            document.getElementById('overlay').style.display = 'block';
        }

        function closeTaskForm() {
            document.getElementById('taskFormModal').style.display = 'none';
            document.getElementById('overlay').style.display = 'none';
        }

        function showTaskDetails(day, tasksJson) {
            console.log("first log",tasksJson);
            console.log(typeof tasksJson);
            const jsonMatch = tasksJson.match(/<script[^>]*>([\s\S]*?)<\/script>/);
            console.log(typeof jsonMatch);
            console.log(jsonMatch);
            tasksJson = JSON.parse(jsonMatch[1].trim())
            console.log(tasksJson);

            tasks = tasksJson
            console.log(tasks);
            console.log("array info: ",Array.isArray(tasks), "task length: ", tasks.length)
            // Check if tasks is an array and proceed if it contains tasks
            if (Array.isArray(tasks) && tasks.length > 0) {
                let taskListContainer = document.getElementById('taskListContainer');
                taskListContainer.innerHTML = '';  // Clear any existing tasks

                // Loop through tasks and display their details
                tasks.forEach(task => {
                    let taskHtml = `
                        <h3>${task.title}</h3>
                        <p>${task.description}</p>
                        <button onclick="window.location.href='/task/complete/0/'.replace(0, ${task.id})">Mark as Completed</button>
                        <button onclick="window.location.href='/task/update/0/'.replace(0, ${task.id})">Edit Task</button>
                        <button onclick="window.location.href='/task/delete/0/'.replace(0, ${task.id})">Delete Task</button>
                        <hr>
                    `;
                    taskListContainer.innerHTML += taskHtml;
                });

                document.getElementById('taskDetailsModal').style.display = 'block';
                document.getElementById('overlay').style.display = 'block';
            }
        }

        function closeTaskDetails() {
            document.getElementById('taskDetailsModal').style.display = 'none';
            document.getElementById('overlay').style.display = 'none';
        }
    </script>
</body>
</html>
